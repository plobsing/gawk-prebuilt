common --enable_platform_specific_config

# Determines whether C++ binaries will be linked dynamically, interacting with the linkstatic attribute on build rules.
# off: Links all targets in mostly static mode. If -static is set in linkopts, targets will change to fully static.
common --dynamic_mode=off

# Don't clobber bazel-out/[platform]/bin
common --experimental_platform_in_output_dir

# Use the zig toolchain from hermetic_cc_toolchain
common --repo_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
common --action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1
common --host_action_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=1

common --incompatible_strict_action_env

common --features=thin_lto
# ThinLTO feature doesn't exist in Zig toolchain, so we must set the flags manually.
# It also doesn't support LTO on darwin targets, so we can't set this globally.
# Instead, we configure copt/linkopt inside the toolchain itself (with a WORKSPACE patch).
#common --copt -flto=thin

# Compilation Flags for zig-cc
common --compilation_mode=opt --strip=always
common --copt -ffunction-sections
common --copt -fdata-sections

common:linux --platforms //:linux_musl
